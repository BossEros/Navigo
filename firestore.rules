rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isFieldUnchanged(field) {
      return !(field in request.resource.data) || 
             request.resource.data[field] == resource.data[field];
    }
    
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users collection rules
    match /users/{userId} {
      // Read: only user or admin
      allow read: if isUser(userId) || isAdmin();
      
      // Create: only authenticated user for their own document
      allow create: if isUser(userId);
      
      // Update: only user with restrictions on email
      allow update: if isUser(userId) && 
                     isFieldUnchanged('email') && 
                     isFieldUnchanged('created_at') &&
                     request.resource.data.keys().hasOnly([
                       'username', 'email', 'home_address', 'work_address', 
                       'age', 'created_at', 'updated_at', 'is_active', 
                       'schema_version'
                     ]);
      
      // No direct deletion allowed
      allow delete: if false;
      
      // Saved maps subcollection
      match /saved_maps/{mapId} {
        allow read: if isUser(userId) || isAdmin();
        allow create, update, delete: if isUser(userId);
      }
      
      // Route history subcollection
      match /route_history/{routeId} {
        allow read: if isUser(userId) || isAdmin();
        allow create: if isUser(userId);
        // Routes should be immutable once created
        allow update: if false;
        allow delete: if isUser(userId);
      }
    }
    
    // User metrics collection
    match /user_metrics/{userId} {
      allow read: if isUser(userId) || isAdmin();
      // All writes handled by Cloud Functions
      allow write: if false;
    }
    
    // App config collection
    match /app_config/{configId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}